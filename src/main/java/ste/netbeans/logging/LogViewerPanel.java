/*
 * Copyright 2025 ste.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package ste.netbeans.logging;

import java.util.logging.Level;
import java.util.logging.LogManager;
import java.util.logging.Logger;
import javax.swing.text.BadLocationException;
import javax.swing.text.Document;

/**
 *
 * @author ste
 */
public class LogViewerPanel extends javax.swing.JPanel {

    /**
     * Creates new form LogViwerPanel
     */
    public LogViewerPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        controlPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        loggerNameField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        logLevelComboBox = new javax.swing.JComboBox<>();
        applyButton = new javax.swing.JButton();
        clearButton = new javax.swing.JButton();
        logTextScrollPane = new javax.swing.JScrollPane();

        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.Y_AXIS));

        controlPanel.setAlignmentY(0.0F);
        controlPanel.setMaximumSize(new java.awt.Dimension(32767, 3));
        controlPanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(LogViewerPanel.class, "LogViwerPanel.jLabel1.text")); // NOI18N
        controlPanel.add(jLabel1);

        loggerNameField.setText(org.openide.util.NbBundle.getMessage(LogViewerPanel.class, "LogViwerPanel.loggerNameField.text")); // NOI18N
        loggerNameField.setMaximumSize(new java.awt.Dimension(200, 2147483647));
        loggerNameField.setPreferredSize(new java.awt.Dimension(200, 23));
        controlPanel.add(loggerNameField);

        org.openide.awt.Mnemonics.setLocalizedText(jLabel2, org.openide.util.NbBundle.getMessage(LogViewerPanel.class, "LogViwerPanel.jLabel2.text")); // NOI18N
        controlPanel.add(jLabel2);

        logLevelComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ALL", "FINEST", "FINER", "FINE", "CONFIG", "INFO", "WARNING", "SEVERE", "OFF" }));
        controlPanel.add(logLevelComboBox);

        org.openide.awt.Mnemonics.setLocalizedText(applyButton, org.openide.util.NbBundle.getMessage(LogViewerPanel.class, "LogViwerPanel.applyButton.text")); // NOI18N
        applyButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        applyButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        applyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                applyButtonActionPerformed(evt);
            }
        });
        controlPanel.add(applyButton);

        org.openide.awt.Mnemonics.setLocalizedText(clearButton, org.openide.util.NbBundle.getMessage(LogViewerPanel.class, "LogViwerPanel.clearButton.text")); // NOI18N
        clearButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        clearButton.setName("clearButton"); // NOI18N
        clearButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });
        controlPanel.add(clearButton);

        add(controlPanel);

        logTextArea.setEditable(false);
        logTextArea.setName("logText"); // NOI18N
        logTextScrollPane.setViewportView(logTextArea);

        add(logTextScrollPane);
    }// </editor-fold>//GEN-END:initComponents

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        logTextArea.setText("");
    }//GEN-LAST:event_clearButtonActionPerformed

    /**
     * Applies the logging configuration based on user input.
     * Retrieves the logger name and level from the UI, and sets the logger's level.
     * Provides feedback in the log area if the logger name is empty or the configuration is applied.
     */
    private void applyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_applyButtonActionPerformed
        String loggerName = loggerNameField.getText();
        String levelString = (String) logLevelComboBox.getSelectedItem();

        if (loggerName == null || loggerName.trim().isEmpty()) {
            appendLog("Logger name cannot be empty.");
            return;
        }

        Logger logger = LogManager.getLogManager().getLogger(loggerName);
        if (logger == null) {
            // Logger does not exist, create it
            logger = Logger.getLogger(loggerName);
        }

        Level newLevel = Level.parse(levelString);
        logger.setLevel(newLevel);

        appendLog("Configuration applied: Logger '" + loggerName + "' set to level " + newLevel.getName() + "\n");
    }//GEN-LAST:event_applyButtonActionPerformed

    /**
     * Appends a new log message to the log display area.
     * The text area automatically scrolls to the end to show the latest message.
     * @param message The log message to append.
     */
    public void appendLog(final String message) {
        try {
            Document doc = logTextArea.getDocument();
            doc.insertString(doc.getLength(), message, null);
            logTextArea.setCaretPosition(doc.getLength());
        } catch (BadLocationException ex) {
            // ignore
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton applyButton;
    private javax.swing.JButton clearButton;
    private javax.swing.JPanel controlPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JComboBox<String> logLevelComboBox;
    public final javax.swing.JEditorPane logTextArea = new javax.swing.JEditorPane();
    private javax.swing.JScrollPane logTextScrollPane;
    private javax.swing.JTextField loggerNameField;
    // End of variables declaration//GEN-END:variables
}
